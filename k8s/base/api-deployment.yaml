apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: quality-platform
  labels:
    app: api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        version: v1
    spec:
      serviceAccountName: api-service-account
      containers:
      - name: api
        image: quality-platform/api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: quality-platform-config
              key: NODE_ENV
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: quality-platform-secret
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: quality-platform-secret
              key: JWT_SECRET
        - name: JWT_EXPIRES_IN
          value: "7d"
        - name: REDIS_URL
          value: redis://:$(REDIS_PASSWORD)@redis-service:6379
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: quality-platform-secret
              key: REDIS_PASSWORD
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: quality-platform-config
              key: LOG_LEVEL
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: quality-platform-config
              key: CORS_ORIGIN
        - name: RATE_LIMIT_MAX
          valueFrom:
            configMapKeyRef:
              name: quality-platform-config
              key: RATE_LIMIT_MAX
        - name: RATE_LIMIT_WINDOW
          valueFrom:
            configMapKeyRef:
              name: quality-platform-config
              key: RATE_LIMIT_WINDOW
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      initContainers:
      - name: wait-for-postgres
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']
      - name: run-migrations
        image: quality-platform/api:latest
        command: ['npx', 'prisma', 'migrate', 'deploy']
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: quality-platform-secret
              key: DATABASE_URL

---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: quality-platform
  labels:
    app: api
spec:
  type: ClusterIP
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-service-account
  namespace: quality-platform

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: quality-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80